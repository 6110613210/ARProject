{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Desktop\\\\ARproject\\\\react_101\\\\client\\\\src\\\\components\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\n\nconst getUsername = () => {\n  let a = null;\n  Axios.get(\"http://localhost:3001/login\").then(response => {\n    if (response.data.loggedIn) {\n      a = response.data.user.username;\n    }\n  });\n  console.log(a);\n  return a;\n};\n\nconst getStatus = () => {\n  let b = null;\n  Axios.get(\"http://localhost:3001/login\").then(response => {\n    if (response.data.loggedIn) {\n      b = response.data.user.status;\n    }\n  });\n  return b;\n};\n\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n\n  Axios.defaults.withCredentials = true;\n  const [loading, setLoaing] = useState(false);\n  const [currentUser, setCurrentUser] = useState(getUsername());\n  const [status, setStatus] = useState(getStatus());\n  console.log(currentUser);\n  console.log(status);\n  useEffect(async () => {\n    await Axios.get(\"http://localhost:3001/login\").then(response => {\n      if (response.data.loggedIn) {\n        setCurrentUser(response.data.user.username); //console.log(\"sdkflsdf\", response.data.user.status);\n\n        setStatus(response.data.user.status);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      currentUser,\n      setCurrentUser,\n      status,\n      setStatus\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AuthProvider, \"yOsvlJ0YpWLoZs8/9eJDE43EMpw=\");\n\n_c = AuthProvider;\nexport { AuthContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/Acer/Desktop/ARproject/react_101/client/src/components/Auth.js"],"names":["React","useState","useEffect","Axios","AuthContext","createContext","getUsername","a","get","then","response","data","loggedIn","user","username","console","log","getStatus","b","status","AuthProvider","children","defaults","withCredentials","loading","setLoaing","currentUser","setCurrentUser","setStatus"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,EAApB;;AACA,MAAMC,WAAW,GAAG,MAAM;AACvB,MAAIC,CAAC,GAAG,IAAR;AACAJ,EAAAA,KAAK,CAACK,GAAN,CAAU,6BAAV,EAAyCC,IAAzC,CAA+CC,QAAD,IAAc;AACzD,QAAIA,QAAQ,CAACC,IAAT,CAAcC,QAAlB,EAA4B;AACzBL,MAAAA,CAAC,GAAIG,QAAQ,CAACC,IAAT,CAAcE,IAAd,CAAmBC,QAAxB;AACF;AACH,GAJD;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYT,CAAZ;AACA,SAAOA,CAAP;AACF,CATD;;AAUA,MAAMU,SAAS,GAAG,MAAM;AACrB,MAAIC,CAAC,GAAG,IAAR;AACAf,EAAAA,KAAK,CAACK,GAAN,CAAU,6BAAV,EAAyCC,IAAzC,CAA+CC,QAAD,IAAc;AACzD,QAAIA,QAAQ,CAACC,IAAT,CAAcC,QAAlB,EAA4B;AACzBM,MAAAA,CAAC,GAAIR,QAAQ,CAACC,IAAT,CAAcE,IAAd,CAAmBM,MAAxB;AACF;AACH,GAJD;AAKA,SAAOD,CAAP;AACF,CARD;;AASA,OAAO,MAAME,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC3ClB,EAAAA,KAAK,CAACmB,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AACA,QAAM,CAACC,OAAD,EAAUC,SAAV,IAAuBxB,QAAQ,CAAC,KAAD,CAArC;AACA,QAAM,CAACyB,WAAD,EAAcC,cAAd,IAAgC1B,QAAQ,CAACK,WAAW,EAAZ,CAA9C;AAEA,QAAM,CAACa,MAAD,EAASS,SAAT,IAAsB3B,QAAQ,CAACgB,SAAS,EAAV,CAApC;AAEAF,EAAAA,OAAO,CAACC,GAAR,CAAYU,WAAZ;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACAjB,EAAAA,SAAS,CAAC,YAAY;AACnB,UAAMC,KAAK,CAACK,GAAN,CAAU,6BAAV,EAAyCC,IAAzC,CAA+CC,QAAD,IAAc;AAC/D,UAAIA,QAAQ,CAACC,IAAT,CAAcC,QAAlB,EAA4B;AACzBe,QAAAA,cAAc,CAACjB,QAAQ,CAACC,IAAT,CAAcE,IAAd,CAAmBC,QAApB,CAAd,CADyB,CAEzB;;AACAc,QAAAA,SAAS,CAAClB,QAAQ,CAACC,IAAT,CAAcE,IAAd,CAAmBM,MAApB,CAAT;AACF;AACH,KANK,CAAN;AAQF,GATQ,EASN,EATM,CAAT;AAWA,sBACG,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEO,MAAAA,WAAF;AAAeC,MAAAA,cAAf;AAA+BR,MAAAA,MAA/B;AAAuCS,MAAAA;AAAvC,KAA7B;AAAA,cACIP;AADJ;AAAA;AAAA;AAAA;AAAA,UADH;AAKF,CAzBM;;GAAMD,Y;;KAAAA,Y;AA0Bb,SAAShB,WAAT","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Axios from \"axios\";\r\nconst AuthContext = React.createContext();\r\nconst getUsername = () => {\r\n   let a = null;\r\n   Axios.get(\"http://localhost:3001/login\").then((response) => {\r\n      if (response.data.loggedIn) {\r\n         a =  response.data.user.username;\r\n      }\r\n   });\r\n   console.log(a)\r\n   return a;\r\n};\r\nconst getStatus = () => {\r\n   let b = null;\r\n   Axios.get(\"http://localhost:3001/login\").then((response) => {\r\n      if (response.data.loggedIn) {\r\n         b =  response.data.user.status;\r\n      }\r\n   });\r\n   return b;\r\n};\r\nexport const AuthProvider = ({ children }) => {\r\n   Axios.defaults.withCredentials = true;\r\n   const [loading, setLoaing] = useState(false);\r\n   const [currentUser, setCurrentUser] = useState(getUsername());\r\n\r\n   const [status, setStatus] = useState(getStatus());\r\n\r\n   console.log(currentUser)\r\n   console.log(status)\r\n   useEffect(async () => {\r\n      await Axios.get(\"http://localhost:3001/login\").then((response) => {\r\n         if (response.data.loggedIn) {\r\n            setCurrentUser(response.data.user.username);\r\n            //console.log(\"sdkflsdf\", response.data.user.status);\r\n            setStatus(response.data.user.status);\r\n         }\r\n      });\r\n\r\n   }, [])\r\n\r\n   return (\r\n      <AuthContext.Provider value={{ currentUser, setCurrentUser, status, setStatus }}>\r\n         {children}\r\n      </AuthContext.Provider>\r\n   )\r\n}\r\nexport { AuthContext };\r\n"]},"metadata":{},"sourceType":"module"}